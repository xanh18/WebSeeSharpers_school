@using Microsoft.AspNetCore.Mvc.Localization
    @inject IViewLocalizer Localizer
@using Microsoft.Extensions.Options
    @inject IOptions<RequestLocalizationOptions> LocOptions
@{
    var culture = Context.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>();
    var cultureList = LocOptions.Value.SupportedUICultures.Select(x=> new SelectListItem{ Value=x.Name, Text=Localizer.GetString(x.Name)}).ToList();
    var returnUrl = string.IsNullOrWhiteSpace(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
    var cultureCookie = Context.Request.Cookies[".AspNetCore.Culture"];
}

@if (cultureCookie.EndsWith("en"))
{
    <h1> welkom</h1>
}
else
{
    <h1> bye</h1>
}

<div>
    <form asp-action="CultureManagement" asp-controller="Home" method="post"
    asp-route-returnUrl="@returnUrl">
        <select name="culture" asp-for="@culture.RequestCulture.UICulture.Name" asp-items="cultureList"
            onchange="this.form.submit();"></select>
    </form>
</div>
